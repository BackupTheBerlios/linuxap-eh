#----------------------------------------
# netcfg
# 3 functions option, menu, write
#----------------------------------------


option()
{
    echo -e "
  <tr>
    <td>
    <input type=\"image\" src=\"/buttons/plus.png\"
        name=\"cfg-netcfg\" alt=\"Network\">
    </td>
    <td>Configure Network Interfaces</td>
  </tr>
"
}


menu()
{
    . $CFGDIR/netcfg
    sel1=
    sel2=
    case "$p_dhcp" in
        enabled) sel1="SELECTED" ;;
        disabled) sel2="SELECTED" ;;
    esac

    echo -e "
<form method=POST action="/cgi-bin/setup">
<input type=hidden name=\"last_menu\" value=\"netcfg\">
<h3>Primary Network Interface (R/L 2=wlan0 3=br0 4=eth0)</h3>
<table>
<tr>
<th align=right>Use DHCP</th>
<td>
  <select name=\"p_dhcp\">
  <option value=\"enabled\" $sel1>Enabled
  <option value=\"disabled\" $sel2>Disabled
  </select>
</td>
</tr>
<tr>
<th align=right>Network Address</th>
<td><input type=text name=p_address value=\"$p_address\" size=15></td>
</tr>
<tr>
<th align=right>Netmask</th>
<td><input type=text name=p_netmask value=\"$p_netmask\" size=15></td>
</tr>
<tr>
<th align=right>Broadcast Address</th>
<td><input type=text name=p_broadcast value=\"$p_broadcast\" size=15></td>
</tr>
</table>
<br>
"

    sel1=
    sel2=
    case "$s_dhcp" in
        enabled) sel1="SELECTED" ;;
        disabled) sel2="SELECTED" ;;
    esac

    echo -e "
<h3>Secondary Network Interface (R/L 2=eth0 4=wlan0 3=N/A)</h3>
<table>
<tr>
<th align=right>Use DHCP</th>
<td>
  <select name=\"s_dhcp\">
  <option value=\"enabled\" $sel1>Enabled
  <option value=\"disabled\" $sel2>Disabled
  </select>
</td>
</tr>
<tr>
<th align=right>Network Address</th>
<td><input type=text name=s_address value=\"$s_address\" size=15></td>
</tr>
<tr>
<th align=right>Netmask</th>
<td><input type=text name=s_netmask value=\"$s_netmask\" size=15></td>
</tr>
<tr>
<th align=right>Broadcast Address</th>
<td><input type=text name=s_broadcast value=\"$s_broadcast\" size=15></td>
</tr>
</table>
<br>

<h3>Miscellaneous Configuration Data</h3>
<table>
<tr>
<th align=right>TFTP Host</th>
<td><input type=text name=tftphost value=\"$tftphost\" size=15></td>
</tr>
<tr>
<th align=right>Syslog Host</th>
<td><input type=text name=logaddr value=\"$logaddr\" size=15></td>
</tr>
<tr>
<th align=right>Remote Date Host</th>
<td><input type=text name=timehost value=\"$timehost\" size=15></td>
</tr>
<tr>
<th align=right>Default Route</th>
<td><input type=text name=router value=\"$router\" size=15></td>
</tr>
<tr>
<th align=right>SWAP Host (nbd)</th>
<td><input type=text name=swaphost value=\"$swaphost\" size=15></td>
</tr>
<tr>
<th align=right>SWAP Port (nbd)</th>
<td><input type=text name=swapport value=\"$swapport\" size=15></td>
</tr>
<tr>
<th align=right>NAT/Masquerade Net<br>(eg: 10.0.1.0/27)</th>
<td><input type=text name=masq_net value=\"$masq_net\" size=18></td>
</tr>
</table>
<br>

<input type=hidden name=menu value=main>
<input type=submit name=submit value=OK>
&nbsp;
&nbsp;
&nbsp;
<input type=submit name=submit value=CANCEL>
</form>
"
}


write()
{

    pre=`head -n \`grep -n "#--- +netcfg ---" $CFGDIR/netcfg|cut -f 1 -d :\` $CFGDIR/netcfg`
    total=`wc -l $CFGDIR/netcfg|tr -s " "|cut -f 2 -d " "`
    end=`grep -n "#--- -netcfg ---" $CFGDIR/netcfg|cut -f 1 -d :`
    post=`tail -n \`expr $total - $end + 1\` $CFGDIR/netcfg`
    echo -e "$pre
#
# netcfg
#

# Primary Interface (RL2/wlan0, RL3/br0, RL4/eth0)
# Need first 3 if not dhcp
# p_dhcp should be either enabled or disabled
p_dhcp=$CGI_p_dhcp
p_address=$CGI_p_address
p_netmask=$CGI_p_netmask
p_broadcast=$CGI_p_broadcast

# Secondary Interface (RL2/eth0, RL4/wlan0)
# Ignored at RL3
s_dhcp=$CGI_s_dhcp
s_address=$CGI_s_address
s_netmask=$CGI_s_netmask
s_broadcast=$CGI_s_broadcast

# These should pull from dhcp ...
router=$CGI_router
tftphost=$CGI_tftphost
logaddr=$CGI_logaddr

timehost=$CGI_timehost

# Network Swapping
swaphost=$CGI_swaphost
swapport=$CGI_swapport

# Masqerading support ... Masquerade this network
# ex: 10.1.0.0/27
# Will Masquerade 10.1.0.0-10.1.0.31
# This assumes you've set up eth0 appropriately
# elsewhere
masq_net=$CGI_masq_net
$post" > $CFGDIR/netcfg
}

#----------------------------------------
# MAIN
#----------------------------------------
$1
